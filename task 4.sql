create database techshop
use techshop
create TABLE Customers (
    CustomerID INT PRIMARY KEY AUTO_INCREMENT,
    FirstName VARCHAR(50),
    LastName VARCHAR(50),
    Email VARCHAR(100),
    Phone VARCHAR(20),
    Address VARCHAR(255)
);
CREATE TABLE Products (
    ProductID INT PRIMARY KEY,
    ProductName VARCHAR(100),
    Description TEXT,
    Price DECIMAL(10, 2)
);
CREATE TABLE Orders (
    OrderID INT PRIMARY KEY,
    CustomerID INT,
    OrderDate DATE,
    TotalAmount DECIMAL(10, 2),
    FOREIGN KEY (CustomerID) REFERENCES Customers(CustomerID)
);
CREATE TABLE OrderDetails (
    OrderDetailID INT PRIMARY KEY,
    OrderID INT,
    ProductID INT,
    Quantity INT,
    FOREIGN KEY (OrderID) REFERENCES Orders(OrderID),
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
CREATE TABLE Inventory (
    InventoryID INT PRIMARY KEY,
    ProductID INT,
    QuantityInStock INT,
    LastStockUpdate DATE,
    FOREIGN KEY (ProductID) REFERENCES Products(ProductID)
);
INSERT INTO Customers VALUES
(1, 'Alice', 'Smith', 'alice@gmail.com', '1234567890', '123 Maple St'),
(2, 'Bob', 'Johnson', 'bob@gmail.com', '2345678901', '456 Oak St'),
(3, 'Carol', 'Davis', 'carol@gmail.com', '3456789012', '789 Pine St'),
(4, 'David', 'Brown', 'david@gmail.com', '4567890123', '101 Birch St'),
(5, 'Eve', 'Wilson', 'eve@gmail.com', '5678901234', '202 Cedar St'),
(6, 'Frank', 'Moore', 'frank@gmail.com', '6789012345', '303 Elm St'),
(7, 'Grace', 'Taylor', 'grace@gmail.com', '7890123456', '404 Spruce St'),
(8, 'Hank', 'Anderson', 'hank@gmail.com', '8901234567', '505 Willow St'),
(9, 'Ivy', 'Thomas', 'ivy@gmail.com', '9012345678', '606 Redwood St'),
(10, 'Jack', 'Lee', 'jack@gmail.com', '0123456789', '707 Cypress St');
select * from customers
INSERT INTO Products VALUES
(101, 'Smartphone', 'Android 5G phone', 299.99),
(102, 'Laptop', '15-inch touchscreen laptop', 799.99),
(103, 'Tablet', '10-inch Android tablet', 199.99),
(104, 'Smartwatch', 'Fitness tracker with GPS', 149.99),
(105, 'Bluetooth Speaker', 'Portable wireless speaker', 89.99),
(106, 'Wireless Earbuds', 'Noise-canceling earbuds', 129.99),
(107, 'Gaming Console', 'Latest generation console', 499.99),
(108, 'Monitor', '27-inch 4K display', 279.99),
(109, 'Keyboard', 'Mechanical keyboard', 59.99),
(110, 'Mouse', 'Wireless optical mouse', 39.99);
select * from products
INSERT INTO Orders VALUES
(1001, 1, '2024-01-10', 299.99),
(1002, 2, '2024-01-11', 499.98),
(1003, 3, '2024-01-12', 149.99),
(1004, 4, '2024-01-13', 279.99),
(1005, 5, '2024-01-14', 799.99),
(1006, 6, '2024-01-15', 199.99),
(1007, 7, '2024-01-16', 129.99),
(1008, 8, '2024-01-17', 299.98),
(1009, 9, '2024-01-18', 89.99),
(1010, 10, '2024-01-19', 499.99);
select * from orders
INSERT INTO OrderDetails VALUES
(1, 1001, 101, 1),
(2, 1002, 102, 1),
(3, 1002, 110, 1),
(4, 1003, 104, 1),
(5, 1004, 108, 1),
(6, 1005, 102, 1),
(7, 1006, 103, 1),
(8, 1007, 106, 1),
(9, 1008, 101, 1),
(10, 1008, 110, 1);
select * from orderDetails
INSERT INTO Inventory VALUES
(1, 101, 50, '2024-01-05'),
(2, 102, 30, '2024-01-06'),
(3, 103, 40, '2024-01-07'),
(4, 104, 60, '2024-01-08'),
(5, 105, 70, '2024-01-09'),
(6, 106, 80, '2024-01-10'),
(7, 107, 25, '2024-01-11'),
(8, 108, 35, '2024-01-12'),
(9, 109, 45, '2024-01-13'),
(10, 110, 55, '2024-01-14');
select * from Inventory
ALTER TABLE Products ADD Category VARCHAR(50);
UPDATE Products SET Category = 'Mobile' WHERE ProductID IN (101, 103);
UPDATE Products SET Category = 'Laptop' WHERE ProductID IN (102);
UPDATE Products SET Category = 'Accessories' WHERE ProductID IN (105, 106, 109, 110);
UPDATE Products SET Category = 'Gaming' WHERE ProductID IN (107);
UPDATE Products SET Category = 'Display' WHERE ProductID IN (108);
UPDATE Products SET Category = 'Wearable' WHERE ProductID IN (104);
-- 1. Customers who have not placed any orders --
SELECT * 
FROM Customers 
WHERE CustomerID NOT IN (SELECT DISTINCT CustomerID FROM Orders);
 -- 2. Total number of products available for sale --
 SELECT COUNT(*) AS TotalProducts 
FROM Products;
--- 3. Total revenue generated by TechShop --
SELECT SUM(TotalAmount) AS TotalRevenue 
FROM Orders;
-- 4. Average quantity ordered for products in a specific category  --
SELECT AVG(Quantity) AS AvgQuantityOrdered
FROM OrderDetails
WHERE ProductID IN (
    SELECT ProductID 
    FROM Products 
    WHERE Category = 'Accessories'  -- replace with parameter
);
-- 5. Total revenue generated by a specific customer --
SELECT SUM(TotalAmount) AS CustomerRevenue
FROM Orders
WHERE CustomerID = 1;  -- replace with parameter
-- 6. Customers who have placed the most orders --
SELECT c.FirstName, c.LastName, COUNT(o.OrderID) AS OrderCount
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID
HAVING COUNT(o.OrderID) = (
    SELECT MAX(OrderCount) FROM (
        SELECT COUNT(OrderID) AS OrderCount
        FROM Orders
        GROUP BY CustomerID
    ) AS Counts
);
-- 7. Most popular product category --
SELECT Category, SUM(Quantity) AS TotalOrdered
FROM OrderDetails od
JOIN Products p ON od.ProductID = p.ProductID
GROUP BY Category
ORDER BY TotalOrdered DESC
LIMIT 1;
-- 8. Customer who spent the most money --
SELECT c.FirstName, c.LastName, SUM(o.TotalAmount) AS TotalSpent
FROM Customers c
JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID
ORDER BY TotalSpent DESC
LIMIT 1;
-- 9. Average order value --
SELECT (SUM(TotalAmount) / COUNT(*)) AS AverageOrderValue
FROM Orders;
-- 10. Total number of orders placed by each customer with names --
SELECT c.FirstName, c.LastName, COUNT(o.OrderID) AS OrderCount
FROM Customers c
LEFT JOIN Orders o ON c.CustomerID = o.CustomerID
GROUP BY c.CustomerID;












